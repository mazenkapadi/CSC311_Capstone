package com.example.demoproject;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.geometry.Insets;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.TextArea;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;

import java.io.IOException;
import java.net.URL;
import java.util.LinkedList;
import java.util.ResourceBundle;

public class PostAndCommentsController implements Initializable {
    @FXML
    Button WriteComment;
    @FXML
    private VBox Holder;
    @FXML
    private VBox PostObject;
    @FXML
    private Label UsernameOfPoster1;
    @FXML
    private VBox PostObject1;

    // Event Listener on Label[#UsernameOfPoster1].onMouseClicked
    @FXML
    public void usernameClick(MouseEvent event) {
        // TODO Autogenerated
    }

    public void BackButton() {
        try {
            ScrollPane root2 = (ScrollPane) FXMLLoader.load(getClass().getResource("TwittlrPage.fxml"));
            Holder.getScene().setRoot(root2);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    @Override
    public void initialize(URL arg0, ResourceBundle arg1) {
        try {
            PostStore posts = new PostStore();
            LinkedList<Post> PostList = posts.getList();

            UserStore Users = new UserStore();

            VBox root = (VBox) FXMLLoader.load(getClass().getResource("SampleOfAPost.fxml"));
            //username
            HBox usernameAndProfPic = (HBox) root.getChildren().get(0);

            Label Newlabel = (Label) usernameAndProfPic.getChildren().get(1);
            Newlabel.setText(PostList.get(SampleOfAPostController.PostClicked).getAuthor().getUsername());
            usernameAndProfPic.getChildren().set(1, Newlabel);
            //prof pic
            ImageView newPic = (ImageView) usernameAndProfPic.getChildren().get(0);
            if (Users.getUser(PostList.get(SampleOfAPostController.PostClicked).getAuthor()).profilePic != null) {
                Image profPic = new Image(Users.getUser(PostList.get(SampleOfAPostController.PostClicked).getAuthor()).profilePic.getAbsolutePath());
                newPic.setImage(profPic);
                usernameAndProfPic.getChildren().set(0, newPic);
            }

            root.getChildren().set(0, usernameAndProfPic);

            //text

            TextArea newTextArea = (TextArea) root.getChildren().get(1);
            newTextArea.setText(PostList.get(SampleOfAPostController.PostClicked).getText());
            root.getChildren().set(1, newTextArea);
            //image

            ImageView newImage = (ImageView) root.getChildren().get(2);


            if (PostList.get(SampleOfAPostController.PostClicked).image != null) {
                Image image = new Image(PostList.get(SampleOfAPostController.PostClicked).getImageName());

                newImage.setImage(image);
                root.getChildren().set(2, newImage);

                HBox HboxArea = (HBox) root.getChildren().get(3);

                Label Time = (Label) HboxArea.getChildren().get(4);
                Time.setText(PostList.get(SampleOfAPostController.PostClicked).dateString);


                HboxArea.getChildren().remove(0);
                HboxArea.getChildren().remove(0);

                Label LikeCount = (Label) HboxArea.getChildren().get(1);
                LikeCount.setText(String.valueOf(PostList.get(SampleOfAPostController.PostClicked).Likes) + " Likes");


                root.getChildren().set(3, HboxArea);


            } else {

                root.getChildren().remove(2);
                HBox HboxArea = (HBox) root.getChildren().get(2);

                Label Time = (Label) HboxArea.getChildren().get(4);
                Time.setText(PostList.get(SampleOfAPostController.PostClicked).dateString);
                HboxArea.getChildren().remove(0);
                HboxArea.getChildren().remove(0);
                root.getChildren().set(2, HboxArea);

            }


            root.setPadding(new Insets(30, 30, 30, 30));
            VBox PostHolder = (VBox) Holder.getChildren().get(1);
            PostHolder.getChildren().add(root);

        } catch (Exception e) {
            e.printStackTrace();
        }


        //comments

        //	if (PostList.get(SampleOfAPostController.PostClicked).Comments == null) {
        //	PostList.get(SampleOfAPostController.PostClicked).Comments = new LinkedList<Comment>();
        //}

        //if (PostList.get(SampleOfAPostController.PostClicked).Comments != null) {
        PostStore posts = new PostStore();
        LinkedList<Post> PostList = posts.getList();
        UserStore Users = new UserStore();
        if (PostList.get(SampleOfAPostController.PostClicked).Comments == null) {
            PostList.get(SampleOfAPostController.PostClicked).Comments = new LinkedList<Comment>();
        }
        for (int x = 0; x < PostList.get(SampleOfAPostController.PostClicked).Comments.size(); x++) {

            VBox root2;
            try {
                root2 = (VBox) FXMLLoader.load(getClass().getResource("SampleComment.fxml"));


                HBox usernameAndProfPic = (HBox) root2.getChildren().get(0);

                Label Newlabel = (Label) usernameAndProfPic.getChildren().get(1);
                Newlabel.setText(PostList.get(x).getAuthor().getUsername());
                usernameAndProfPic.getChildren().set(1, Newlabel);

                ImageView newPic = (ImageView) usernameAndProfPic.getChildren().get(0);

                if (Users.getUser(PostList.get(x).getAuthor()).profilePic != null) {
                    Image profPic = new Image(Users.getUser(PostList.get(x).getAuthor()).profilePic.getAbsolutePath());
                    newPic.setImage(profPic);
                    usernameAndProfPic.getChildren().set(0, newPic);
                }


                root2.getChildren().set(0, usernameAndProfPic);


                TextArea CommentText = (TextArea) root2.getChildren().get(1);
                CommentText.setText(PostList.get(SampleOfAPostController.PostClicked).Comments.get(x).getText());
                root2.getChildren().set(1, CommentText);

                Label Time = new Label(PostList.get(SampleOfAPostController.PostClicked).Comments.get(x).dateString);
                root2.getChildren().set(3, Time);

                if (PostList.get(SampleOfAPostController.PostClicked).Comments.get(x).getImage() != null) {
                    ImageView NewImage2 = (ImageView) root2.getChildren().get(2);
                    Image image2 = new Image(PostList.get(SampleOfAPostController.PostClicked).Comments.get(x).getImage().getAbsolutePath());

                    NewImage2.setImage(image2);
                    root2.getChildren().set(2, NewImage2);


                } else {

                    root2.getChildren().remove(2);

                }


                root2.setPadding(new Insets(50, 50, 50, 50));
                VBox CommentHolder = (VBox) Holder.getChildren().get(3);
                CommentHolder.getChildren().add(root2);
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }

        }


    }


    public void CreateComment() {
        try {
            VBox root5 = (VBox) FXMLLoader.load(getClass().getResource("CommentCreator.fxml"));
            Holder.getScene().setRoot(root5);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public void likeClick() {
        System.out.println("Like Click PostAndCommentcon");
        PostStore store = new PostStore();
        try {
            Post newpost = store.getList().get(SampleOfAPostController.PostClicked);
            newpost.Likes++;
            store.replacePost(SampleOfAPostController.PostClicked, newpost);
            PostStore store2 = new PostStore();
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            ScrollPane root4 = (ScrollPane) FXMLLoader.load(getClass().getResource("PostAndComments.fxml"));
            Holder.getScene().setRoot(root4);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }
}

